DGP = function(seed, n,p,sigma ){
set.seed(seed)
sigma2 = sigma^2
n1 = p * n
n0 = n-n1
# Create the binary variable: fix the number of observations:
# n1 = p*n and n0 = n-n1
D = c(rep(0,n0), rep(1,n1))
# Generate the error terms as a function of D
eps = c()
for(i in 1:n){
if(D[i]==1){
eps[i] = rnorm(1,0,1)
}
else{eps[i] = rnorm(1,0,sigma)}
}
# Generate the outcome equation
y = 0 + 0*D+ eps
return(data.frame(cbind(y,D)))
}
# a) Generate a Test Dataset:
DGP1 = DGP(seed = 1,n = 30,p = 0.1, sigma = 0.5)
reg1 = lm(y ~ D,data = DGP1)
library(lmtest)
library(sandwich)
# robust:
coeftest(reg1, vcov = vcovHC(reg1, "HC1"))
# conventional
coeftest(reg1)
library(lmtest)
library(sandwich)
# robust:
coeftest(reg1, vcov = vcovHC(reg1, "HC1"))
# conventional
coeftest(reg1)
warnings()
install.packages("stringi")
install.packages("stringi")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("DBI", "quantmod", "RcppArmadillo", "segmented"))
install.packages("tidymodels")
rm(list=ls())
set.seed(1234)
########################
# Q1                   #
########################
# a)
library(wooldridge)
# Description of the data
?wage2
dat = wage2
View(dat)
# Getting the names
names(dat)
# Dimension of the data
dim(dat)
OLS = lm(lwage ~ educ , data = dat)
summary(OLS)
# e)
library(ivreg)
regiv = ivreg(lwage ~ educ |sibs , data = dat)
summary(regiv)
# d)
FirstStage = lm(educ ~ sibs, data = dat)
summary(FirstStage)
# e)
library(ivreg)
regiv = ivreg(lwage ~ educ |sibs , data = dat)
summary(regiv)
# a)
reg = lm(lwage ~ sibs, data = dat)
summary(reg)
# b)
reg2 = lm(educ ~ brthord, data = dat)
summary(reg2)
reg$coefficients[2]*3
#c)
library(ivreg)
regiv = ivreg(lwage ~ educ |brthord , data = dat)
summary(regiv)
# d)
firststage=lm(educ ~ sibs + brthord , data = dat)
summary(firststage)
summary(regiv)
# d)
firststage=lm(educ ~ sibs + brthord , data = dat)
summary(firststage)
########## Problem Set 5 ########
# clear the environment
rm(list=ls())
set.seed(1234)
# Q2:
library(frontier)
data(riceProdPhil)
dat = riceProdPhil
########## Problem Set 5 ########
# clear the environment
rm(list=ls())
set.seed(1234)
# Q2:
library(frontier)
# Q2:
library(frontier)
# Q2:
library(frontier)
data(riceProdPhil)
dat = riceProdPhil
# Create logs:
dat$LPROD = log(dat$PROD)
dat$LArea =log(dat$AREA)
dat$LLabor = log(dat$LABOR)
dat$LNPK = log(dat$NPK)
# Estimate the regression
PooledOLS = lm(LPROD ~ LArea + LLabor + LNPK, data = dat)
summary(PooledOLS)
# Q4 )
View(dat)
# Reshape the data to the long format
#each farmer for each year, then want each
datPanel = pdata.frame(dat, c("FMERCODE","YEARDUM") )
library(plm)
# Reshape the data to the long format
#each farmer for each year, then want each
datPanel = pdata.frame(dat, c("FMERCODE","YEARDUM") )
View(datPanel)
# Q4 )
view(dat)
# Q4 )
view(dat)
########## Problem Set 5 ########
# clear the environment
rm(list=ls())
set.seed(1234)
# Q2:
library(frontier)
data(riceProdPhil)
dat = riceProdPhil
# Create logs:
dat$LPROD = log(dat$PROD)
dat$LArea =log(dat$AREA)
dat$LLabor = log(dat$LABOR)
dat$LNPK = log(dat$NPK)
# Estimate the regression
PooledOLS = lm(LPROD ~ LArea + LLabor + LNPK, data = dat)
summary(PooledOLS)
# Q4 )
view(dat)
# Q4 )
View(dat)
library(plm)
# Reshape the data to the long format
#each farmer for each year, then want each
datPanel = pdata.frame(dat, c("FMERCODE","YEARDUM") )
View(datPanel)
FE1 = plm(LPROD ~ LArea + LLabor + LNPK, model = "within",data = datPanel,index=c("FMERCODE","YEARDUM"))
summary(FE1)
# Extract FE:
fixef(FE1)
setwd("~/Documents/R_folder/MSc/ME/ME-project/code")
# Data
setwd("~/Documents/R_folder/MSc/ME/ME-project/code")
# load dataset + filter
analysis_sample <- read_dta("../original_study/labour-market/data/output/analysis_sample.dta") %>%
filter(twfe_sample == 1)
rm(list = ls())
# Packages
library(dplyr)
library(haven)
library(magrittr)
library(tidyverse)
library(fixest)
library(did)
library(dplyr)
library(broom)
library(fastDummies)
# Data
setwd("~/Documents/R_folder/MSc/ME/ME-project/code")
# load dataset + filter
analysis_sample <- read_dta("../original_study/labour-market/data/output/analysis_sample.dta") %>%
filter(twfe_sample == 1)
#modify k rank variable
analysis_sample$k_rank <- analysis_sample$k_rank * 100
# 'panel data setup'
analysis_sample <- analysis_sample %>% group_by(UNITID, AY_FALL)
rm(list = ls())
# Packages
library(dplyr)
library(haven)
library(magrittr)
library(tidyverse)
library(fixest)
library(did)
library(dplyr)
library(broom)
library(fastDummies)
# load dataset + filter
analysis_sample <- read_dta("../original_study/labour-market/data/output/analysis_sample.dta") %>%
filter(twfe_sample == 1)
source("~/Documents/R_folder/MSc/ME/ME-project/code/1.prelim-DiD.R", echo=TRUE)
